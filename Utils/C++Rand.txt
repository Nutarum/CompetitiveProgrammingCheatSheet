#include <algorithm>
#include <chrono>
#include <iostream>
#include <random>
#include <vector>

using namespace std;

// sacado de https://codeforces.com/blog/entry/61587 (Don't use rand(): a guide to random number generators in C++)
// este modo de sacar numeros aleatorios es mas rapido y fiable que rand(), mas info en el link anterior.

int main() {
    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());
 
    //generacion de un numero aleatorio en el rango de unsigned int
    unsigned int a = rng();
    printf("%u\n",a);
    
    //generacion de un numero aleatorio entre 1 y 10
    // limite_inferior + rng() % limite_superior
    int b = 1 + rng() % 10;
    printf("%d",b);
    
    //generacion de un numero aleatorio en el rango de unsigned long long int
    mt19937_64 rng2(chrono::steady_clock::now().time_since_epoch().count());
    unsigned long long int c = rng2();
    printf("%llu\n",c);
    
    //otros ejemplos con arrays
    int N = 3000000;
    vector<int> permutation(N);
    for (int i = 0; i < N; i++)
        permutation[i] = i;
    //barajeamos el array
    shuffle(permutation.begin(), permutation.end(), rng);

    for (int i = 0; i < N; i++)
        permutation[i] = i;
    //intercambiamos cada elemento por otro aleatorio del array
    for (int i = 1; i < N; i++)
        swap(permutation[i], permutation[uniform_int_distribution<int>(0, i)(rng)]);
}
